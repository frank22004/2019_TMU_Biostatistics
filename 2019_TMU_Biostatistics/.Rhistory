summarise(
count = n(),
mean = round(mean(`Ratio`, na.rm = TRUE),3),
sd = sd(`Ratio`, na.rm = TRUE),
median = median(`Ratio`, na.rm = TRUE),
IQR = IQR(`Ratio`, na.rm = TRUE)
)
Data <- subset.data.frame(collagen_compression,`Status` == "Compressed" & "Centrifuge Time (min)" != 5 & `Person`=="Frank") %>%
group_by(across(all_of(c("Group Name","Status","Buffer pH","Total solution quantity (ml)","Centrifuge (rpm)","Centrifuge Time (min)")))) %>%
summarise(
count = n(),
mean = round(mean(`Ratio`, na.rm = TRUE),3),
sd = sd(`Ratio`, na.rm = TRUE),
median = median(`Ratio`, na.rm = TRUE),
IQR = IQR(`Ratio`, na.rm = TRUE)
)
Data <- subset.data.frame(collagen_compression,`Status` == "Compressed" & "Centrifuge Time (min)" != 5 & `Person`=="Frank") %>%
group_by(across(all_of(c("Group Name","Status","Buffer pH","Total solution quantity (ml)","Centrifuge (rpm)","Centrifuge Time (min)")))) %>%
summarise(
count = n(),
mean = round(mean(`Compressed Ratio`, na.rm = TRUE),3),
sd = sd(`Compressed Ratio`, na.rm = TRUE),
median = median(`Compressed Ratio`, na.rm = TRUE),
IQR = IQR(`Compressed Ratio`, na.rm = TRUE)
)
Data
#create a synthesis matrix
Data <- subset.data.frame(collagen_compression,`Status` == "Compressed" & "Centrifuge Time (min)" != 5 & `Person`=="Frank") %>%
group_by(across(all_of(c("Group Name","Status","Buffer pH","Total solution quantity (ml)","Centrifuge (rpm)","Centrifuge Time (min)")))) %>%
summarise(
count = n(),
mean = round(mean(`Compressed Ratio`, na.rm = TRUE),3),
sd = sd(`Compressed Ratio`, na.rm = TRUE),
median = median(`Compressed Ratio`, na.rm = TRUE),
IQR = IQR(`Compressed Ratio`, na.rm = TRUE)
)
#Chang the columne name for analysis
colnames(Data)[which(names(Data)=="Buffer pH")] <- "pH"
colnames(Data)[which(names(Data)== "Total solution quantity (ml)")] <- "Quantity"
colnames(Data)[which(names(Data)== "Compressed Ratio")] <- "Ratio"
colnames(Data)[which(names(Data)== "Centrifuge (rpm)")] <- "Centrifuge"
colnames(Data)[which(names(Data)== "Centrifuge Time (min)")] <- "CentrifugeTime"
colnames(Data)[which(names(Data)== "Group Name")] <- "Condition"
Data
knitr::opts_chunk$set(echo = TRUE)
power.t.tomorrow()
youngs <- subset.data.frame(collagen_compression, Person == "Frank")
colnames(youngs)[which(names(youngs)=="Buffer pH")] <- "pH"
colnames(youngs)[which(names(youngs)== "Total solution quantity (ml)")] <- "Quantity"
colnames(youngs)[which(names(youngs)== "Compressed Ratio")] <- "Ratio"
colnames(youngs)[which(names(youngs)== "Centrifuge (rpm)")] <- "Centrifuge"
colnames(youngs)[which(names(youngs)== "Centrifuge Time (min)")] <- "CentrifugeTime"
colnames(youngs)[which(names(youngs)== "Group Name")] <- "Condition"
head(youngs,5)
youngs <- subset.data.frame(collagen_compression, Person == "Frank")
colnames(youngs)[which(names(youngs)=="Buffer pH")] <- "pH"
colnames(youngs)[which(names(youngs)== "Total solution quantity (ml)")] <- "Quantity"
colnames(youngs)[which(names(youngs)== "Compressed Ratio")] <- "Ratio"
colnames(youngs)[which(names(youngs)== "Centrifuge (rpm)")] <- "Centrifuge"
colnames(youngs)[which(names(youngs)== "Centrifuge Time (min)")] <- "CentrifugeTime"
colnames(youngs)[which(names(youngs)== "Group Name")] <- "Condition"
colnames(youngs)[which(names(youngs)== "Youngs Modulus (kPa)")] <- "Youngs_Modulus"
head(youngs,5)
Data <- youngs %>%
group_by(across(all_of(c("Condition","Status","pH","Quantity","Centrifuge","CentrifugeTime","Group")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
library(readxl)
library(dplyr)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggsignif)
library(ggeasy)
Data <- youngs %>%
group_by(across(all_of(c("Condition","Status","pH","Quantity","Centrifuge","CentrifugeTime","Group")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data
Data <- youngs %>%
group_by(across(all_of(c("Status","pH","Quantity","Centrifuge","CentrifugeTime","Group")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data
Data <- youngs %>%
group_by(across(all_of(c("Status","pH","Quantity")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data
shapiro.test(subset.data.frame(Data, `pH` == 7.7 & `Quantity` == 1 & `Status` == "uncompressed")$`Youngs_Modulus`)
shapiro.test(subset.data.frame(Data, `pH` == 7.7 & `Quantity` == "1" & `Status` == "uncompressed")$`Youngs_Modulus`)
shapiro.test(subset.data.frame(Data, `pH` == "7.7" & `Quantity` == "1" & `Status` == "uncompressed")$`Youngs_Modulus`)
shapiro.test(subset.data.frame(youngs, `pH` == "7.7" & `Quantity` == "1" & `Status` == "uncompressed")$`Youngs_Modulus`)
shapiro.test(subset.data.frame(youngs, `pH` == "7.7" & `Quantity` == "1" & `Status` == "uncompressed")$`Youngs_Modulus`)
shapiro.test(subset.data.frame(youngs, `pH` == 7.7 & `Quantity` == 1 & `Status` == "uncompressed")$`Youngs_Modulus`)
shapiro.test(subset.data.frame(youngs, `pH` == 7.7 & `Quantity` == 1 & `Status` == "uncompressed")$Youngs_Modulus)
shapiro.test(subset.data.frame(youngs, `Status` == "uncompressed")$Youngs_Modulus)
shapiro.test(youngs$Youngs_Modulus)
shapiro.test(subset.data.frame(youngs, pH == 7.7 & Quantity == 1 & Status == "Compressed")$Youngs_Modulus)
shapiro.test(subset.data.frame(youngs, pH == 7.7 & Quantity == 1 & Status == "Compressed")$Youngs_Modulus)
shapiro.test(subset.data.frame(youngs, pH == 7.7 & Quantity == 1.5 & Status == "Compressed")$Youngs_Modulus)
var.test(Youngs_Modulus ~ Quantity, subset.data.frame(youngs, pH == 7.7 & Status == "Compressed"))
t.test(Youngs_Modulus ~ Quantity, subset.data.frame(youngs, pH == 7.7 & Status == "Compressed"))
Data <- youngs %>%
group_by(across(all_of(c("Status","pH")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(dplyr)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggsignif)
library(ggeasy)
collagen <- read_excel("E:/OneDrive/Tokyo Metropolitan University/Collagen Membrane/Collagen Membrane.xlsx", sheet = 2)
preparation <- read_excel("E:/OneDrive/Tokyo Metropolitan University/Collagen Membrane/Collagen Membrane.xlsx", sheet = 1)
collagen_compression <- merge(collagen,preparation,by="Group Name", all.x = TRUE)
head(collagen_compression,5)
youngs <- subset.data.frame(collagen_compression, Person == "Frank")
colnames(youngs)[which(names(youngs)=="Buffer pH")] <- "pH"
colnames(youngs)[which(names(youngs)== "Total solution quantity (ml)")] <- "Quantity"
colnames(youngs)[which(names(youngs)== "Compressed Ratio")] <- "Ratio"
colnames(youngs)[which(names(youngs)== "Centrifuge (rpm)")] <- "Centrifuge"
colnames(youngs)[which(names(youngs)== "Centrifuge Time (min)")] <- "CentrifugeTime"
colnames(youngs)[which(names(youngs)== "Group Name")] <- "Condition"
colnames(youngs)[which(names(youngs)== "Youngs Modulus (kPa)")] <- "Youngs_Modulus"
head(youngs,5)
Data <- youngs %>%
group_by(across(all_of(c("Status","pH")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data
Data <- youngs %>%
group_by(across(all_of(c("Status","pH","Area")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data
Data <- youngs %>%
group_by(across(all_of(c("Area")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data
shapiro.test(subset.data.frame(youngs, Area == "Highest")$Youngs_Modulus)
shapiro.test(subset.data.frame(youngs, Area == "Middle")$Youngs_Modulus)
shapiro.test(subset.data.frame(youngs, Area == "Low")$Youngs_Modulus)
aov(Youngs_Modulus ~ Area, subset.data.frame(youngs, Date.x > as.Date('2022-10-20')))
youngtest <- aov(Youngs_Modulus ~ Area, subset.data.frame(youngs, Date.x > as.Date('2022-10-20')))
summary(youngtest)
youngtest <- aov(Youngs_Modulus ~ Area, subset.data.frame(youngs, Date.x >= as.Date('2022-10-20')))
summary(youngtest)
Data <- youngs %>%
group_by(across(all_of(c("Area","Date.X")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data <- youngs %>%
group_by(across(all_of(c("Area","Date")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data <- youngs %>%
group_by(across(all_of(c("Area","Date.x")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data
collagen <- read_excel("E:/OneDrive/Tokyo Metropolitan University/Collagen Membrane/Collagen Membrane.xlsx", sheet = 2)
preparation <- read_excel("E:/OneDrive/Tokyo Metropolitan University/Collagen Membrane/Collagen Membrane.xlsx", sheet = 1)
collagen_compression <- merge(collagen,preparation,by="Group Name", all.x = TRUE)
head(collagen_compression,5)
View(collagen_compression)
View(collagen_compression)
collagen <- read_excel("E:/OneDrive/Tokyo Metropolitan University/Collagen Membrane/Collagen Membrane.xlsx", sheet = 2)
preparation <- read_excel("E:/OneDrive/Tokyo Metropolitan University/Collagen Membrane/Collagen Membrane.xlsx", sheet = 1)
collagen_compression <- merge(collagen,preparation,by="Group Name", all.x = TRUE)
head(collagen_compression,5)
youngs <- subset.data.frame(collagen_compression, Person == "Frank")
colnames(youngs)[which(names(youngs)=="Buffer pH")] <- "pH"
colnames(youngs)[which(names(youngs)== "Total solution quantity (ml)")] <- "Quantity"
colnames(youngs)[which(names(youngs)== "Compressed Ratio")] <- "Ratio"
colnames(youngs)[which(names(youngs)== "Centrifuge (rpm)")] <- "Centrifuge"
colnames(youngs)[which(names(youngs)== "Centrifuge Time (min)")] <- "CentrifugeTime"
colnames(youngs)[which(names(youngs)== "Group Name")] <- "Condition"
colnames(youngs)[which(names(youngs)== "Youngs Modulus (kPa)")] <- "Youngs_Modulus"
head(youngs,5)
Data <- youngs %>%
group_by(across(all_of(c("Area","Date.x")))) %>%
summarise(
count = n(),
mean = round(mean(`Youngs_Modulus`, na.rm = TRUE),3),
sd = sd(`Youngs_Modulus`, na.rm = TRUE),
median = median(`Youngs_Modulus`, na.rm = TRUE),
IQR = IQR(`Youngs_Modulus`, na.rm = TRUE)
)
Data
shapiro.test(subset.data.frame(youngs, Area == "Highest")$Youngs_Modulus)
shapiro.test(subset.data.frame(youngs, Area == "Middle")$Youngs_Modulus)
shapiro.test(subset.data.frame(youngs, Area == "Low")$Youngs_Modulus)
youngtest <- aov(Youngs_Modulus ~ Area, subset.data.frame(youngs, Date.x >= as.Date('2022-10-20')))
summary(youngtest)
youngtest <- aov(Youngs_Modulus ~ Area, subset.data.frame(youngs, Date.x >= as.Date('2022/10/20')))
summary(youngtest)
pstat <- compare_means(Youngs_Modulus ~ Area , data = youngs, method = "kruskal.test")
pstat
pstat <- compare_means('Youngs_Modulus' ~ 'Area' , data = youngs, method = "kruskal.test")
pstat <- compare_means(Youngs_Modulus ~ Area , data = youngs, method = "kruskal.test")
pstat
youngtest <- aov(Youngs_Modulus ~ Area, subset.data.frame(youngs, Date.x >= as.Date('2022-10-20')))
summary(youngtest)
dun <- youngs %>%
group_by(Quantity,pH) %>%
dunn_test(Youngs_Modulus ~ Area) %>%
add_xy_position(x="Status", fun = "mean_sd", dodge = 0.8)
dun <- youngs %>%
dunn_test(Youngs_Modulus ~ Area) %>%
add_xy_position(x="Status", fun = "mean_sd", dodge = 0.8)
dun
library(readxl)
library(dplyr)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggsignif)
library(ggeasy)
library(PMCMR)
install.packages("PMCMR")
library(readxl)
library(dplyr)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggsignif)
library(ggeasy)
library(PMCMR)
install.packages("PMCMRplus")
library(readxl)
library(dplyr)
library(rstatix)
library(ggpubr)
library(ggplot2)
library(ggsignif)
library(ggeasy)
library(PMCMR)
library(PMCMRplus)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(UsingR)
library(ggpubr)
library(ggplot2)
library(ggsignif)
library(dplyr)
inverseAspectRatio <- read_xlsx("C:/Users/Mechanobiology/Desktop/Shikan.xlsx")
inverseAspectRatio
inverseAspectRatio <- read_xlsx("C:/Users/Mechanobiology/Desktop/Shikan.xlsx",sheet = 2)
inverseAspectRatio
#aggregate(inverseAspectRatio[c("nomarized inverce aspect ratio")],list(group=inverseAspectRatio$`SC or CS`),mean)
SynthesisMatrix <- inverseAspectRatio %>%
group_by(`Flow`) %>%
summarise(
count = n(),
mean = mean(`Absorbance`, na.rm = TRUE),
sd = sd(`Absorbance`, na.rm = TRUE),
median = median(`Absorbance`, na.rm = TRUE),
IQR = IQR(`Absorbance`, na.rm = TRUE)
)
SynthesisMatrix
F1 <- subset.data.frame(inverseAspectRatio,inverseAspectRatio$`Flow`=="1/5x")
F2 <- subset.data.frame(inverseAspectRatio,inverseAspectRatio$`Flow`=="1x")
F3 <- subset.data.frame(inverseAspectRatio,inverseAspectRatio$`Flow`=="5x")
F1
View(F1)
View(F1)
View(F1)
View(F1)
normalTest <- shapiro.test(F1$`Absorbance`)
simple.eda(F1$`Absorbance`)
normalTest
normalTest_F2 <- shapiro.test(F2$`Absorbance`)
simple.eda(F2$`Absorbance`)
normalTest_F2
normalTest_F3 <- shapiro.test(F3$`Absorbance`)
simple.eda(F3$`Absorbance`)
normalTest_F3
pstat <- compare_means(`Absorbance` ~ `Flow`,data = inverseAspectRatio, method = meth)
pstat
pstat <- compare_means(`Absorbance` ~ `Flow`,data = inverseAspectRatio, method = "kruskal.test")
pstat
dun <- inverseAspectRatio %>%
dunn_test(`Absorbance` ~ `Flow`) %>%
add_xy_position(x="Flow", fun = "mean_sd", dodge = 0.8)
dun
#group_by(Quantity,pH) %>%
posthoc.f
dun <- inverseAspectRatio %>%
dunn_test(`Absorbance` ~ `Flow`) %>%
add_xy_position(x="Flow", fun = "mean_sd", dodge = 0.8)
dun
#group_by(Quantity,pH) %>%
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(pstat, label = "p.signif",y.position = 1.2, position = position_dodge(0.8))
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(pstat, label = "p.signif",y.position = 1.2, position = position_dodge(0.8))
ggbarplot(SynthesisMatrix, x='Flow', y='mean', ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(pstat, label = "p.signif",y.position = 1.2, position = position_dodge(0.8))
ggbarplot(SynthesisMatrix, x="Flow", y="mean")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(pstat, label = "p.signif",y.position = 1.2, position = position_dodge(0.8))
View(SynthesisMatrix)
View(SynthesisMatrix)
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(dun, label = "p.signif",y.position = 1.2, position = position_dodge(0.8))
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(dun, hide.ns = TRUE)
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(dun, hide.ns = TRUE)+
ggtitle("Flow vs Proliferation")
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(dun, hide.ns = TRUE)+
ggtitle("Flow vs Proliferation")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(dun, hide.ns = TRUE)+
ggtitle("Flow vs Proliferation")+
easy_center_title()
aov(`Absorbance` ~ `Flow`, data = inverseAspectRatio)
summary(aov(`Absorbance` ~ `Flow`, data = inverseAspectRatio))
compANOVA <- aov(`Absorbance` ~ `Flow`, data = inverseAspectRatio)
summary(compANOVA)
tukeycomp <- tukey_hsd(compANOVA)
tukeycomp
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(dun)+
ggtitle("Flow vs Proliferation")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(dun, hide.ns = TRUE)+
ggtitle("Flow vs Proliferation")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE)+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
tukeycomp <- tukey_hsd(compANOVA)%>%
add_xy_position(x="Flow", fun = "mean_sd", dodge = 0.8)
tukeycomp <- tukey_hsd(compANOVA)
tukeycomp
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1.5,1.8,2.2)))+
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1.5,1.8,2.2))+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1,1.2,1.3))+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1,17.2,1.3))+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1,17,1.2,1.3))+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1.17,1.2,1.3))+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1.14,1.2,1.3))+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = TRUE)+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1.13,1.2,1.3))+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)",label = format('mean',2))+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1.13,1.2,1.3))+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(tukeycomp, hide.ns = TRUE,
y.position = c(1.13,1.2,1.3))+
ggtitle("Flow vs Proliferation from ANOVA")+
easy_center_title()
ggbarplot(SynthesisMatrix, x="Flow", y="mean", ylab = "Absorbance (O.D.)")+
geom_bar(stat="identity", position=position_dodge())+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.2, position=position_dodge(.9))+
stat_pvalue_manual(dun, hide.ns = TRUE)+
ggtitle("Flow vs Proliferation")+
easy_center_title()
install.packages("RODBC")
knitr::opts_chunk$set(echo = FALSE)
library(RODBC)
RIVERINFO <- "Driver={Microsoft Access Driver (*.mdb, *.accdb)};"
MDBPATH <- "E:/OneDrive/文件/TMU-DESKTOP-SF2LD60.accdb"
PATH <- paste0(DRIVERINFO, "DBQ=", MDBPATH)
DRIVERINFO <- "Driver={Microsoft Access Driver (*.mdb, *.accdb)};"
MDBPATH <- "E:/OneDrive/文件/TMU-DESKTOP-SF2LD60.accdb"
PATH <- paste0(DRIVERINFO, "DBQ=", MDBPATH)
channel <- odbcDriverConnect(PATH)
close(channel)
