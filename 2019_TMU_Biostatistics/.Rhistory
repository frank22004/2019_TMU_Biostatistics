axis.title.y = element_markdown()
)
ki67
windowsFonts(A = windowsFont("Times New Roman"))
ki67 <- ggboxplot(data = df_data_if, x="Status",y="Ratio", fill = "Status", title = "Proliferation by ki67 staining",size = 1)+
scale_y_continuous(expand = c(0,0),labels = percent, limits = c(0,0.7))+
#  scale_x_discrete(labels=my_xlab,guide = guide_axis(n.dodge = 2))+
scale_x_discrete(labels=c("Uncompressed","Compressed"))+
labs(y="% of nucleus <br> ( <sup>ki67+</sup> / <sub>Hoechst33342+</sub> )")+
scale_fill_manual(values = c("white","gray20"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#        prism.ticks.length.y = unit(0.12, "cm"),
axis.text.y = element_text(size = 18, color = "black", face = "bold"),
axis.text.x = element_text(size = 18, color = "black", face = "bold"),
axis.title = element_text(size = 18, face = "bold"),
legend.text = element_text(size=18, face = "bold"),
legend.title = element_text(size=18,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
#        legend.position = c(0.18,0.85),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank(),
axis.title.y = element_markdown()
)
ki67
df_density <- df_density[df_density$識別碼.y=="317"|df_density$識別碼.y=="318",]
SynthesisMatrix_density <- df_density %>%
group_by(`Status.y`,`Ingredient`) %>%
summarise(
count = sum(!is.na(`AreaFriction`)),
mean = mean(`AreaFriction`, na.rm = TRUE),
sd = sd(`AreaFriction`, na.rm = TRUE),
median = median(`AreaFriction`, na.rm = TRUE),
IQR = IQR(`AreaFriction`, na.rm = TRUE),
se = sd(`AreaFriction`, na.rm = TRUE)/sqrt(count),
normality = shapiro.test(`AreaFriction`)$p.value
)
SynthesisMatrix_density
#Retrive the AFM measurement
df <- sqlQuery(channel,"SELECT * FROM CollagenMembrane, AFM WHERE CollagenMembrane.Cantilever=AFM.No;", stringsAsFactors = FALSE)
df_sample <- sqlQuery(channel,"SELECT * FROM Sample, Collagen_Membrane_Preparation WHERE Sample.Scaffolds=Collagen_Membrane_Preparation.識別碼;")
df_dish <- sqlQuery(channel, "SELECT * FROM DishDepth;", stringsAsFactors = FALSE)
df_AFM <- merge(df,df_sample,by.x="Experiment Sample",by.y = "識別碼",all.x = "TRUE")
df_AFM
#Retrive spheroid expansion
df_spheroid <- sqlQuery(channel,"SELECT * FROM Spheroid, Cell WHERE Spheroid.Cell=Cell.識別碼;", stringsAsFactors = FALSE)
df_spheroid <- merge(df_spheroid,df_sample,by.x="識別碼.1",by.y = "Cell",all.x = "TRUE")
df_drug <- sqlQuery(channel, "SELECT * FROM Drug, Material WHERE Drug.Drug = Material.MaterialID;")
df_data_withdrug <- merge(df_spheroid, df_drug,by.x = "GroupName", by.y = "ExperimentSample", all.x = "TRUE")
df_data_withdrug
#Retrive the fiber density
df_col <- sqlQuery(channel,"SELECT * FROM Sample, SEM WHERE GroupName=ExperimentSample;", stringsAsFactors = FALSE)
df_density <- merge(df_col,df_sample,by.x="GroupName",by.y = "GroupName",all.x = "TRUE")
df_density
#Retrive the ki67 proliferation status
df_if <- sqlQuery(channel,"SELECT * FROM IF;", stringsAsFactors = FALSE)
df_data_ifraw <- merge(df_if,df_sample,by.x="GroupName",by.y = "GroupName",all.x = "TRUE")
df_data_if <- subset.data.frame(df_data_ifraw, `Ingredient` == "CollagenInStretch_flat" & `Position` == "Periphery")
df_data_if
#Retrive the MMP2 activity
df_MMP <- sqlQuery(channel,"SELECT * FROM Zymography;", stringsAsFactors = FALSE)
df_MMP <- merge(df_MMP,df_sample,by.x="GroupName",by.y = "GroupName",all.x = "TRUE")
df_MMP <- subset.data.frame(df_MMP, `Ingredient` != "CollagenInStretch_PBS" & `Type`=="Cell" & !is.na(`MMP2`))
df_MMP
df_density <- df_density[df_density$Ingredient == "CollagenInStretch_flat",]
SynthesisMatrix_density <- df_density %>%
group_by(`Status.y`,`Ingredient`) %>%
summarise(
count = sum(!is.na(`AreaFriction`)),
mean = mean(`AreaFriction`, na.rm = TRUE),
sd = sd(`AreaFriction`, na.rm = TRUE),
median = median(`AreaFriction`, na.rm = TRUE),
IQR = IQR(`AreaFriction`, na.rm = TRUE),
se = sd(`AreaFriction`, na.rm = TRUE)/sqrt(count),
normality = shapiro.test(`AreaFriction`)$p.value
)
SynthesisMatrix_density
df_density <- df_density[df_density$Ingredient == "CollagenInStretch_flat",]
SynthesisMatrix_density <- df_density %>%
group_by(`Status.y`,`Ingredient`) %>%
summarise(
count = sum(!is.na(`AreaFriction`)),
mean = mean(`AreaFriction`, na.rm = TRUE),
sd = sd(`AreaFriction`, na.rm = TRUE),
median = median(`AreaFriction`, na.rm = TRUE),
IQR = IQR(`AreaFriction`, na.rm = TRUE),
se = sd(`AreaFriction`, na.rm = TRUE)/sqrt(count),
normality = shapiro.test(`AreaFriction`)$p.value
)
SynthesisMatrix_density
fiber <- df_data %>%
t_test(`AreaFriction` ~ Status.y)%>%
add_xy_position(fun = "mean_se", dodge = 0.8,group ="Ingredient",x = "Status.y")
fiber <- df_density %>%
t_test(`AreaFriction` ~ Status.y)%>%
add_xy_position(fun = "mean_se", dodge = 0.8,group ="Ingredient",x = "Status.y")
fiber
fiber <- df_density %>%
t_test(`AreaFriction` ~ Status.y)%>%
add_xy_position(fun = "mean_se", dodge = 0.8,group ="Ingredient",x = "Status.y")
fiber
#Add the sample size
my_xlab <- c("Uncompressed","Compressed")
windowsFonts(A = windowsFont("Times New Roman"))
# Use prefix and suffix to create your own variants
french_percent <- label_percent(
decimal.mark = ",",
suffix = ""
)
fiberdensity <- ggboxplot(data = df_data, x="Status.y",y="AreaFriction", title = "Density",size = 0.6, fill = "Status.y")+
scale_y_continuous(expand = c(0,0.005),limits = c(0,1)
,labels = french_percent
)+
labs(y="Fiber Density (%)", x = "collagen concentration")+
stat_pvalue_manual(dun,hide.ns = TRUE, size = 10, tip.length = 0, bracket.size = 1, step.increase = 0.01, family = "A"
#                     y.position = 0.69
)+
scale_fill_manual(
values = c("white","gray24"),name = "Collagen Construct",
label=c("Uncompressed","Compressed"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 20, color = "black", face = "bold"),
axis.text.x = element_text(size = 20, color = "black", face = "bold"),
axis.ticks.length.x = unit(0, "cm"),
axis.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size=16, face = "bold"),
legend.title = element_text(size=16,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank()
)
fiberdensity
#Add the sample size
my_xlab <- c("Uncompressed","Compressed")
windowsFonts(A = windowsFont("Times New Roman"))
# Use prefix and suffix to create your own variants
french_percent <- label_percent(
decimal.mark = ",",
suffix = ""
)
fiberdensity <- ggboxplot(data = df_density, x="Status.y",y="AreaFriction", title = "Density",size = 0.6, fill = "Status.y")+
scale_y_continuous(expand = c(0,0.005),limits = c(0,1)
,labels = french_percent
)+
labs(y="Fiber Density (%)", x = "collagen concentration")+
stat_pvalue_manual(fiber,hide.ns = TRUE, size = 10, tip.length = 0, bracket.size = 1, step.increase = 0.01, family = "A"
#                     y.position = 0.69
)+
scale_fill_manual(
values = c("white","gray24"),name = "Collagen Construct",
label=c("Uncompressed","Compressed"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 20, color = "black", face = "bold"),
axis.text.x = element_text(size = 20, color = "black", face = "bold"),
axis.ticks.length.x = unit(0, "cm"),
axis.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size=16, face = "bold"),
legend.title = element_text(size=16,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank()
)
fiberdensity
fiber <- df_density %>%
t_test(`AreaFriction` ~ Status.y)%>%
add_xy_position(fun = "mean_se", dodge = 0.8,group ="Ingredient",x = "Status.y")
fiber$p.signif <- ifelse(fiber$p <=0.0001,"****",
ifelse(fiber$p<=0.001,"***",
ifelse(fiber$p<=0.01,"**",
ifelse(fiber$p<=0.05,"*","ns"))))
fiber
#Add the sample size
my_xlab <- c("Uncompressed","Compressed")
windowsFonts(A = windowsFont("Times New Roman"))
# Use prefix and suffix to create your own variants
french_percent <- label_percent(
decimal.mark = ",",
suffix = ""
)
fiberdensity <- ggboxplot(data = df_density, x="Status.y",y="AreaFriction", title = "Density",size = 0.6, fill = "Status.y")+
scale_y_continuous(expand = c(0,0.005),limits = c(0,1)
,labels = french_percent
)+
labs(y="Fiber Density (%)", x = "collagen concentration")+
stat_pvalue_manual(fiber,hide.ns = TRUE, size = 10, tip.length = 0, bracket.size = 1, step.increase = 0.01, family = "A"
#                     y.position = 0.69
)+
scale_fill_manual(
values = c("white","gray24"),name = "Collagen Construct",
label=c("Uncompressed","Compressed"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 20, color = "black", face = "bold"),
axis.text.x = element_text(size = 20, color = "black", face = "bold"),
axis.ticks.length.x = unit(0, "cm"),
axis.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size=16, face = "bold"),
legend.title = element_text(size=16,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank()
)
fiberdensity
#Retrive the AFM measurement
df <- sqlQuery(channel,"SELECT * FROM CollagenMembrane, AFM WHERE CollagenMembrane.Cantilever=AFM.No;", stringsAsFactors = FALSE)
df_sample <- sqlQuery(channel,"SELECT * FROM Sample, Collagen_Membrane_Preparation WHERE Sample.Scaffolds=Collagen_Membrane_Preparation.識別碼;")
df_dish <- sqlQuery(channel, "SELECT * FROM DishDepth;", stringsAsFactors = FALSE)
df_AFM <- merge(df,df_sample,by.x="Experiment Sample",by.y = "識別碼",all.x = "TRUE")
df_AFM
#Retrive spheroid expansion
df_spheroid <- sqlQuery(channel,"SELECT * FROM Spheroid, Cell WHERE Spheroid.Cell=Cell.識別碼;", stringsAsFactors = FALSE)
df_spheroid <- merge(df_spheroid,df_sample,by.x="識別碼.1",by.y = "Cell",all.x = "TRUE")
df_drug <- sqlQuery(channel, "SELECT * FROM Drug, Material WHERE Drug.Drug = Material.MaterialID;")
df_data_withdrug <- merge(df_spheroid, df_drug,by.x = "GroupName", by.y = "ExperimentSample", all.x = "TRUE")
df_data_withdrug
#Retrive the fiber density
df_col <- sqlQuery(channel,"SELECT * FROM Sample, SEM WHERE GroupName=ExperimentSample;", stringsAsFactors = FALSE)
df_density <- merge(df_col,df_sample,by.x="GroupName",by.y = "GroupName",all.x = "TRUE")
df_density$Status.y <- factor(df_density$Status.y, levels = c("UncompressedWithCell","CompressedWithCell"))
df_density
#Retrive the ki67 proliferation status
df_if <- sqlQuery(channel,"SELECT * FROM IF;", stringsAsFactors = FALSE)
df_data_ifraw <- merge(df_if,df_sample,by.x="GroupName",by.y = "GroupName",all.x = "TRUE")
df_data_if <- subset.data.frame(df_data_ifraw, `Ingredient` == "CollagenInStretch_flat" & `Position` == "Periphery")
df_data_if
#Retrive the MMP2 activity
df_MMP <- sqlQuery(channel,"SELECT * FROM Zymography;", stringsAsFactors = FALSE)
df_MMP <- merge(df_MMP,df_sample,by.x="GroupName",by.y = "GroupName",all.x = "TRUE")
df_MMP <- subset.data.frame(df_MMP, `Ingredient` != "CollagenInStretch_PBS" & `Type`=="Cell" & !is.na(`MMP2`))
df_MMP
#Add the sample size
my_xlab <- c("Uncompressed","Compressed")
windowsFonts(A = windowsFont("Times New Roman"))
# Use prefix and suffix to create your own variants
french_percent <- label_percent(
decimal.mark = ",",
suffix = ""
)
fiberdensity <- ggboxplot(data = df_density, x="Status.y",y="AreaFriction", title = "Density",size = 0.6, fill = "Status.y")+
scale_y_continuous(expand = c(0,0.005),limits = c(0,1)
,labels = french_percent
)+
labs(y="Fiber Density (%)", x = "collagen concentration")+
stat_pvalue_manual(fiber,hide.ns = TRUE, size = 10, tip.length = 0, bracket.size = 1, step.increase = 0.01, family = "A"
#                     y.position = 0.69
)+
scale_fill_manual(
values = c("white","gray24"),name = "Collagen Construct",
label=c("Uncompressed","Compressed"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 20, color = "black", face = "bold"),
axis.text.x = element_text(size = 20, color = "black", face = "bold"),
axis.ticks.length.x = unit(0, "cm"),
axis.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size=16, face = "bold"),
legend.title = element_text(size=16,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank()
)
fiberdensity
df_density <- df_density[df_density$Ingredient == "CollagenInStretch_flat",]
SynthesisMatrix_density <- df_density %>%
group_by(`Status.y`,`Ingredient`) %>%
summarise(
count = sum(!is.na(`AreaFriction`)),
mean = mean(`AreaFriction`, na.rm = TRUE),
sd = sd(`AreaFriction`, na.rm = TRUE),
median = median(`AreaFriction`, na.rm = TRUE),
IQR = IQR(`AreaFriction`, na.rm = TRUE),
se = sd(`AreaFriction`, na.rm = TRUE)/sqrt(count),
normality = shapiro.test(`AreaFriction`)$p.value
)
SynthesisMatrix_density
fiber <- df_density %>%
t_test(`AreaFriction` ~ Status.y)%>%
add_xy_position(fun = "mean_se", dodge = 0.8,group ="Ingredient",x = "Status.y")
fiber$p.signif <- ifelse(fiber$p <=0.0001,"****",
ifelse(fiber$p<=0.001,"***",
ifelse(fiber$p<=0.01,"**",
ifelse(fiber$p<=0.05,"*","ns"))))
fiber
#Add the sample size
my_xlab <- c("Uncompressed","Compressed")
windowsFonts(A = windowsFont("Times New Roman"))
# Use prefix and suffix to create your own variants
french_percent <- label_percent(
decimal.mark = ",",
suffix = ""
)
fiberdensity <- ggboxplot(data = df_density, x="Status.y",y="AreaFriction", title = "Density",size = 0.6, fill = "Status.y")+
scale_y_continuous(expand = c(0,0.005),limits = c(0,1)
,labels = french_percent
)+
labs(y="Fiber Density (%)", x = "collagen concentration")+
stat_pvalue_manual(fiber,hide.ns = TRUE, size = 10, tip.length = 0, bracket.size = 1, step.increase = 0.01, family = "A"
#                     y.position = 0.69
)+
scale_fill_manual(
values = c("white","gray24"),name = "Collagen Construct",
label=c("Uncompressed","Compressed"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 20, color = "black", face = "bold"),
axis.text.x = element_text(size = 20, color = "black", face = "bold"),
axis.ticks.length.x = unit(0, "cm"),
axis.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size=16, face = "bold"),
legend.title = element_text(size=16,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank()
)
fiberdensity
#Add the sample size
my_xlab <- c("Uncompressed","Compressed")
windowsFonts(A = windowsFont("Times New Roman"))
# Use prefix and suffix to create your own variants
french_percent <- label_percent(
decimal.mark = ",",
suffix = ""
)
fiberdensity <- ggboxplot(data = df_density, x="Status.y",y="AreaFriction", title = "Density",size = 0.6, fill = "Status.y")+
scale_y_continuous(expand = c(0,0.005),limits = c(0,1)
,labels = french_percent
)+
labs(y="Fiber Density (%)", x = "collagen concentration")+
stat_pvalue_manual(fiber,hide.ns = TRUE, size = 10, tip.length = 0, bracket.size = 1, step.increase = 0.01, family = "A"
#                     y.position = 0.69
)+
scale_x_discrete(labels=my_xlab)+
scale_fill_manual(
values = c("white","gray24"),name = "Collagen Construct",
label=c("Uncompressed","Compressed"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 20, color = "black", face = "bold"),
axis.text.x = element_text(size = 20, color = "black", face = "bold"),
axis.ticks.length.x = unit(0, "cm"),
axis.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size=16, face = "bold"),
legend.title = element_text(size=16,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank()
)
fiberdensity
#Add the sample size
my_xlab <- c("Uncompressed","Compressed")
windowsFonts(A = windowsFont("Times New Roman"))
# Use prefix and suffix to create your own variants
french_percent <- label_percent(
decimal.mark = ",",
suffix = ""
)
fiberdensity <- ggboxplot(data = df_density, x="Status.y",y="AreaFriction", title = "Density",size = 0.6, fill = "Status.y")+
scale_y_continuous(expand = c(0,0.005),limits = c(0,1)
,labels = french_percent
)+
labs(y="Fiber Density (%)", x = "collagen concentration")+
stat_pvalue_manual(fiber,hide.ns = TRUE, size = 10, tip.length = 0, bracket.size = 1, step.increase = 0.01, family = "A",                     y.position = 0.69
)+
scale_x_discrete(labels=my_xlab)+
scale_fill_manual(
values = c("white","gray24"),name = "Collagen Construct",
label=c("Uncompressed","Compressed"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 20, color = "black", face = "bold"),
axis.text.x = element_text(size = 20, color = "black", face = "bold"),
axis.ticks.length.x = unit(0, "cm"),
axis.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size=16, face = "bold"),
legend.title = element_text(size=16,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank()
)
fiberdensity
#Add the sample size
my_xlab <- c("Uncompressed","Compressed")
windowsFonts(A = windowsFont("Times New Roman"))
# Use prefix and suffix to create your own variants
french_percent <- label_percent(
decimal.mark = ",",
suffix = ""
)
fiberdensity <- ggboxplot(data = df_density, x="Status.y",y="AreaFriction", title = "Density",size = 0.6, fill = "Status.y")+
scale_y_continuous(expand = c(0,0.005),limits = c(0,0.8),labels = french_percent
)+
labs(y="Fiber Density (%)", x = "collagen concentration")+
stat_pvalue_manual(fiber,hide.ns = TRUE, size = 10, tip.length = 0, bracket.size = 1, step.increase = 0.01, family = "A",                     y.position = 0.69
)+
scale_x_discrete(labels=my_xlab)+
scale_fill_manual(
values = c("white","gray24"),name = "Collagen Construct",
label=c("Uncompressed","Compressed"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 20, color = "black", face = "bold"),
axis.text.x = element_text(size = 20, color = "black", face = "bold"),
axis.ticks.length.x = unit(0, "cm"),
axis.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size=16, face = "bold"),
legend.title = element_text(size=16,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank()
)
fiberdensity
#Add the sample size
my_xlab <- c("Uncompressed","Compressed")
windowsFonts(A = windowsFont("Times New Roman"))
# Use prefix and suffix to create your own variants
french_percent <- label_percent(
decimal.mark = ",",
suffix = ""
)
fiberdensity <- ggboxplot(data = df_density, x="Status.y",y="AreaFriction", title = "Density",size = 0.6, fill = "Status.y")+
scale_y_continuous(expand = c(0,0.005),limits = c(0,0.8),labels = french_percent)+
labs(y="Fiber Density (%)", x = "collagen concentration")+
stat_pvalue_manual(fiber,hide.ns = TRUE, size = 10, tip.length = 0, bracket.size = 1, step.increase = 0.01, family = "A", y.position = 0.69)+
scale_x_discrete(labels=my_xlab)+
scale_fill_manual(
values = c("white","gray24"),name = "Collagen Construct", label=c("Uncompressed","Compressed"))+
theme_bw()+
border(size = 2)+
easy_center_title()+
theme(axis.ticks.length=unit(0.2, "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size = 20, color = "black", face = "bold"),
axis.text.x = element_text(size = 20, color = "black", face = "bold"),
axis.ticks.length.x = unit(0, "cm"),
axis.title = element_text(size = 20, face = "bold"),
legend.text = element_text(size=16, face = "bold"),
legend.title = element_text(size=16,face = "bold"),
plot.subtitle = element_text(size = 20, face = "bold",hjust = 0.5),
plot.title = element_blank(),
text = element_text(family ="A"),
legend.position = "none",
axis.ticks = element_line(size = 1, colour = "black"),
axis.title.x = element_blank()
)
fiberdensity
close(channel)
